// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entire App Stack Demo 1`] = `
Object {
  "Description": "Cosmos Extension: Singleton resources for the Cosmos, like CdkRepo and EcrRepo",
  "Outputs": Object {
    "AppLibVersion": Object {
      "Export": Object {
        "Name": "AppDemoLibVersion",
      },
      "Value": "0.8.12",
    },
    "ExportsOutputFnGetAttCdkRepoName": Object {
      "Export": Object {
        "Name": "AppDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CdkRepo",
          "Name",
        ],
      },
    },
    "ExportsOutputFnGetAttCodeRepoName": Object {
      "Export": Object {
        "Name": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CodeRepo",
          "Name",
        ],
      },
    },
    "ExportsOutputFnGetAttEcrRepoArn": Object {
      "Export": Object {
        "Name": "AppDemoCosmos:ExportsOutputFnGetAttEcrRepoArn0BB148DE",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "EcrRepo",
          "Arn",
        ],
      },
    },
    "ExportsOutputRefEcrRepo": Object {
      "Export": Object {
        "Name": "AppDemoCosmos:ExportsOutputRefEcrRepoE58180DE",
      },
      "Value": Object {
        "Ref": "EcrRepo",
      },
    },
  },
  "Resources": Object {
    "CdkRepo": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RepositoryDescription": "App CDK Repo for Demo Cosmos.",
        "RepositoryName": "app-demo-cdk-repo",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "CodeRepo": Object {
      "Properties": Object {
        "RepositoryName": "app-demo-code-repo",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
        ],
      },
      "Type": "AWS::CodeCommit::Repository",
    },
    "EcrRepo": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RepositoryName": "app/demo/frontend",
        "RepositoryPolicyText": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::2222:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
        ],
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;

exports[`Entire App Stack Demo/Dev 1`] = `
Object {
  "Description": "Cosmos Galaxy Extension: App resources dependant on each Aws Account.",
}
`;

exports[`Entire App Stack Demo/Dev/Dev 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Parameters": Object {
    "VersionStateCurrentValue": Object {
      "Default": "/App/Demo/Dev/Dev/VersionState",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterSecurityGroupfromDemoDevEcsHttpsListenerSecurityGroup699AD7C53276865535": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 32768,
        "GroupId": Object {
          "Fn::ImportValue": "CoreDevDevClusterSecurityGroup",
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "CoreDevDevHttpsListenerSecurityGroupId",
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FrontendHttpsRedirect": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "RedirectConfig": Object {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "Values": Array [
              "/demo",
            ],
          },
        ],
        "ListenerArn": Object {
          "Fn::ImportValue": "CoreDevDevHttpListenerArn",
        },
        "Priority": 49835,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "FrontendHttpsServiceRule": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "FrontendServiceTargetGroup",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "Values": Array [
              "/demo",
            ],
          },
        ],
        "ListenerArn": Object {
          "Fn::ImportValue": "CoreDevDevHttpsListenerArn",
        },
        "Priority": 49835,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "FrontendLogs": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FrontendService": Object {
      "DependsOn": Array [
        "FrontendHttpsServiceRule",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Fn::ImportValue": "CoreDevDevClusterName",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "EC2",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "Container",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Ref": "FrontendServiceTargetGroup",
            },
          },
        ],
        "PlacementStrategies": Array [
          Object {
            "Field": "attribute:ecs.availability-zone",
            "Type": "spread",
          },
        ],
        "SchedulingStrategy": "REPLICA",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Dev",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FrontendTask",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FrontendServiceTargetGroup": Object {
      "Properties": Object {
        "HealthCheckPath": "/health",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Dev",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "0",
          },
        ],
        "TargetType": "instance",
        "VpcId": Object {
          "Fn::ImportValue": "CoreDevDevVpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "FrontendTask": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::Join": Array [
                              "",
                              Array [
                                "arn:",
                                Object {
                                  "Ref": "AWS::Partition",
                                },
                                ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                              ],
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::Join": Array [
                              "",
                              Array [
                                "arn:",
                                Object {
                                  "Ref": "AWS::Partition",
                                },
                                ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                              ],
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/app/demo/frontend:",
                  Object {
                    "Fn::GetAtt": Array [
                      "VersionState",
                      "Value",
                    ],
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FrontendLogs",
                },
                "awslogs-region": "ap-southeast-2",
                "awslogs-stream-prefix": "Container",
              },
            },
            "MemoryReservation": 256,
            "Name": "Container",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "HostPort": 0,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FrontendTaskExecutionRole",
            "Arn",
          ],
        },
        "Family": "DemoDevFrontendTask752F8783",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Dev",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FrontendTaskRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FrontendTaskExecutionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FrontendTaskExecutionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FrontendLogs",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FrontendTaskExecutionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "FrontendTaskExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FrontendTaskRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VersionState": Object {
      "Properties": Object {
        "Name": "/App/Demo/Dev/Dev/VersionState",
        "Tags": Object {
          "cosmos:extension": "Demo",
          "cosmos:galaxy:extension": "Dev",
          "cosmos:solarsystem:extension": "Dev",
        },
        "Type": "String",
        "Value": Object {
          "Ref": "VersionStateCurrentValue",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;

exports[`Entire App Stack Demo/Dev/Tst 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Parameters": Object {
    "VersionStateCurrentValue": Object {
      "Default": "/App/Demo/Dev/Tst/VersionState",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "ClusterSecurityGroupfromDemoDevTstEcsHttpsListenerSecurityGroup1EB35E143276865535": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 32768,
        "GroupId": Object {
          "Fn::ImportValue": "CoreDevTstClusterSecurityGroup",
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::ImportValue": "CoreDevTstHttpsListenerSecurityGroupId",
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "FrontendHttpsRedirect": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "RedirectConfig": Object {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "Values": Array [
              "/demo",
            ],
          },
        ],
        "ListenerArn": Object {
          "Fn::ImportValue": "CoreDevTstHttpListenerArn",
        },
        "Priority": 49835,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "FrontendHttpsServiceRule": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "FrontendServiceTargetGroup",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "path-pattern",
            "Values": Array [
              "/demo",
            ],
          },
        ],
        "ListenerArn": Object {
          "Fn::ImportValue": "CoreDevTstHttpsListenerArn",
        },
        "Priority": 49835,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "FrontendLogs": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "FrontendService": Object {
      "DependsOn": Array [
        "FrontendHttpsServiceRule",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Fn::ImportValue": "CoreDevTstClusterName",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "EC2",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "Container",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Ref": "FrontendServiceTargetGroup",
            },
          },
        ],
        "PlacementStrategies": Array [
          Object {
            "Field": "attribute:ecs.availability-zone",
            "Type": "spread",
          },
        ],
        "SchedulingStrategy": "REPLICA",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Tst",
          },
        ],
        "TaskDefinition": Object {
          "Ref": "FrontendTask",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "FrontendServiceTargetGroup": Object {
      "Properties": Object {
        "HealthCheckPath": "/health",
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Tst",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "0",
          },
        ],
        "TargetType": "instance",
        "VpcId": Object {
          "Fn::ImportValue": "CoreDevTstVpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "FrontendTask": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Fn::Select": Array [
                      4,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::Join": Array [
                              "",
                              Array [
                                "arn:",
                                Object {
                                  "Ref": "AWS::Partition",
                                },
                                ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                              ],
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".dkr.ecr.",
                  Object {
                    "Fn::Select": Array [
                      3,
                      Object {
                        "Fn::Split": Array [
                          ":",
                          Object {
                            "Fn::Join": Array [
                              "",
                              Array [
                                "arn:",
                                Object {
                                  "Ref": "AWS::Partition",
                                },
                                ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                              ],
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/app/demo/frontend:",
                  Object {
                    "Fn::GetAtt": Array [
                      "VersionState",
                      "Value",
                    ],
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "FrontendLogs",
                },
                "awslogs-region": "ap-southeast-2",
                "awslogs-stream-prefix": "Container",
              },
            },
            "MemoryReservation": 256,
            "Name": "Container",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "HostPort": 0,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "FrontendTaskExecutionRole",
            "Arn",
          ],
        },
        "Family": "DemoDevTstFrontendTask002C717D",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": Array [
          "EC2",
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Tst",
          },
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "FrontendTaskRole",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "FrontendTaskExecutionRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Tst",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FrontendTaskExecutionRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-southeast-2:1111:repository/app/demo/frontend",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "FrontendLogs",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FrontendTaskExecutionRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "FrontendTaskExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FrontendTaskRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Dev",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "Tst",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "VersionState": Object {
      "Properties": Object {
        "Name": "/App/Demo/Dev/Tst/VersionState",
        "Tags": Object {
          "cosmos:extension": "Demo",
          "cosmos:galaxy:extension": "Dev",
          "cosmos:solarsystem:extension": "Tst",
        },
        "Type": "String",
        "Value": Object {
          "Ref": "VersionStateCurrentValue",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
  },
}
`;

exports[`Entire App Stack Demo/Mgt 1`] = `
Object {
  "Description": "Cosmos Galaxy Extension: App resources dependant on each Aws Account.",
}
`;

exports[`Entire App Stack Demo/Mgt/CiCd 1`] = `
Object {
  "Description": "Cosmos SolarSystem Extension: App resources dependant on each App Env, like Services and Databases.",
  "Resources": Object {
    "CdkPipeline": Object {
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Type": "S3",
        },
        "Name": "App-Demo-Cdk-Pipeline",
        "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                  },
                },
                "Name": "CdkCheckout",
                "Namespace": "CdkCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"false\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDiff",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Configuration": Object {
                  "CustomData": "Please review the CdkDiff build.",
                },
                "Name": "CdkDiffApproval",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 2,
              },
            ],
            "Name": "Diff",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"false\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"-e AppDemoCosmos AppDemoMgtGalaxy AppDemoMgtCiCdSolarSystem AppDemoDevGalaxy AppDemoDevDevSolarSystem AppDemoDevTstSolarSystem\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkCodeOutput",
                  },
                ],
                "Name": "CdkDeploy",
                "RoleArn": "arn:aws:iam::1111:role/CoreCdkMasterRole",
                "RunOrder": 1,
              },
            ],
            "Name": "Deploy",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CdkPipelineCdkArtifactBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "LogFilePrefix": "BucketAccessLogs/",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CdkPipelineCdkArtifactBucketPolicy": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CdkPipelineCdkArtifactBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CdkPipelineCdkArtifactBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceSSLOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CdkPipelineDeploy": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Location": Object {
            "Ref": "CdkPipelineCdkArtifactBucket",
          },
          "Name": "cdk.templates",
          "NamespaceType": "BUILD_ID",
          "Packaging": "ZIP",
          "Path": "CodeBuild",
          "Type": "S3",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "DIFF",
              "Type": "PLAINTEXT",
              "Value": "true",
            },
            Object {
              "Name": "DEPLOY",
              "Type": "PLAINTEXT",
              "Value": "true",
            },
            Object {
              "Name": "STACKS",
              "Type": "PLAINTEXT",
              "Value": "AppDemoCosmos AppDemoMgtGalaxy AppDemoMgtCiCdSolarSystem AppDemoDevGalaxy AppDemoDevDevSolarSystem AppDemoDevTstSolarSystem",
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "App-Demo-Cdk-Deploy",
        "ServiceRole": "arn:aws:iam::1111:role/CoreCdkMasterRole",
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [],
      \\"runtime-versions\\": {
        \\"nodejs\\": \\"14\\"
      }
    },
    \\"pre_build\\": {
      \\"commands\\": [
        \\"npm ci\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"if [ $DIFF = true ]; then npx cdk diff \${STACKS}; fi;\\",
        \\"if [ $DEPLOY = true ]; then npx cdk deploy --require-approval=never \${STACKS}; fi;\\"
      ]
    }
  },
  \\"env\\": {},
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": [
      \\"*.template.json\\"
    ]
  }
}",
          "Location": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://git-codecommit.ap-southeast-2.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/v1/repos/",
                Object {
                  "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                },
              ],
            ],
          },
          "Type": "CODECOMMIT",
        },
        "SourceVersion": "master",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:feature",
            "Value": "CiCd",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodePipeline": Object {
      "DependsOn": Array [
        "CodePipelineRoleDefaultPolicy",
        "CodePipelineRole",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "CodePipelineCodeArtifactBucket",
          },
          "Type": "S3",
        },
        "Name": "App-Demo-Code-Pipeline",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "CodePipelineRole",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
                  },
                },
                "Name": "CodeCheckout",
                "Namespace": "CodeCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CodeOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Provider": "CodeCommit",
                  "Version": "1",
                },
                "Configuration": Object {
                  "BranchName": "master",
                  "PollForSourceChanges": false,
                  "RepositoryName": Object {
                    "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                  },
                },
                "Name": "CdkCheckout",
                "Namespace": "CdkCheckout",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "CdkOutput",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "ProjectName": Object {
                    "Ref": "CodePipelineBuild",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CodeOutput",
                  },
                ],
                "Name": "CodeBuild",
                "Namespace": "CodeBuild",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"APP_BUILD_VERSION\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"#{CodeBuild.APP_BUILD_VERSION}\\"},{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"AppDemoDevDevSolarSystem\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkOutput",
                  },
                ],
                "Name": "StackDeploy",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "DeployDev",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1",
                },
                "Name": "StackApproval",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"APP_BUILD_VERSION\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"#{CodeBuild.APP_BUILD_VERSION}\\"},{\\"name\\":\\"DIFF\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"DEPLOY\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"true\\"},{\\"name\\":\\"STACKS\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"AppDemoDevTstSolarSystem\\"}]",
                  "ProjectName": Object {
                    "Ref": "CdkPipelineDeploy",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "CdkOutput",
                  },
                ],
                "Name": "StackDeploy",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineRole",
                    "Arn",
                  ],
                },
                "RunOrder": 2,
              },
            ],
            "Name": "DeployTst",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "CodePipelineBuild": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "ECR_URL",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttEcrRepoArn0BB148DE",
                            },
                          ],
                        },
                      ],
                    },
                    ".dkr.ecr.",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttEcrRepoArn0BB148DE",
                            },
                          ],
                        },
                      ],
                    },
                    ".",
                    Object {
                      "Ref": "AWS::URLSuffix",
                    },
                    "/",
                    Object {
                      "Fn::ImportValue": "AppDemoCosmos:ExportsOutputRefEcrRepoE58180DE",
                    },
                  ],
                ],
              },
            },
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "App-Demo-Code-Build",
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "CodePipelineRole",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": Object {
            "Fn::Join": Array [
              "",
              Array [
                "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"pre_build\\": {
      \\"commands\\": [
        \\"aws ecr get-login-password --region ",
                Object {
                  "Ref": "AWS::Region",
                },
                " | docker login --username AWS --password-stdin https://",
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".amazonaws.com\\",
        \\"export APP_BUILD_VERSION=$(make version)\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"make build\\"
      ]
    },
    \\"post_build\\": {
      \\"commands\\": [
        \\"make push\\"
      ]
    }
  },
  \\"env\\": {
    \\"exported-variables\\": [
      \\"APP_BUILD_VERSION\\"
    ]
  }
}",
              ],
            ],
          },
          "Location": Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://git-codecommit.ap-southeast-2.",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/v1/repos/",
                Object {
                  "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
                },
              ],
            ],
          },
          "Type": "CODECOMMIT",
        },
        "SourceVersion": "master",
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "CodePipelineCodeArtifactBucket": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "LogFilePrefix": "BucketAccessLogs/",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "CodePipelineCodeArtifactBucketPolicy": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "CodePipelineCodeArtifactBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "CodePipelineCodeArtifactBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "ForceSSLOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "CodePipelineCodeRepoDemoMgtCiCdCodePipeline1401BDB0EventRule": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
            "referenceName": Array [
              "master",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codecommit:ap-southeast-2:1111:",
                  Object {
                    "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
                  },
                ],
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "arn:",
                  Object {
                    "Ref": "AWS::Partition",
                  },
                  ":codepipeline:ap-southeast-2:1111:",
                  Object {
                    "Ref": "CodePipeline",
                  },
                ],
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "CodePipelineEventsRole",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "CodePipelineEventsRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodePipelineEventsRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codepipeline:StartPipelineExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codepipeline:ap-southeast-2:1111:",
                    Object {
                      "Ref": "CodePipeline",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodePipelineEventsRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CodePipelineEventsRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodePipelineRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Array [
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "ssmmessages:CreateControlChannel",
                    "ssmmessages:CreateDataChannel",
                    "ssmmessages:OpenControlChannel",
                    "ssmmessages:OpenDataChannel",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "sessionManager",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "cosmos:extension",
            "Value": "Demo",
          },
          Object {
            "Key": "cosmos:galaxy:extension",
            "Value": "Mgt",
          },
          Object {
            "Key": "cosmos:solarsystem:extension",
            "Value": "CiCd",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodePipelineRoleDefaultPolicy": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:ap-southeast-2:1111:",
                    Object {
                      "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-southeast-2:1111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CodePipelineBuild",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-southeast-2:1111:log-group:/aws/codebuild/",
                      Object {
                        "Ref": "CodePipelineBuild",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:ap-southeast-2:1111:report-group/",
                    Object {
                      "Ref": "CodePipelineBuild",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineCodeArtifactBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodePipelineCodeArtifactBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CodePipelineRole",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:ap-southeast-2:1111:",
                    Object {
                      "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCodeRepoName1221C780",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CodePipelineBuild",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CodePipelineCodeArtifactBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "CodePipelineCodeArtifactBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttEcrRepoArn0BB148DE",
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttEcrRepoArn0BB148DE",
              },
            },
            Object {
              "Action": Array [
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:UploadArchive",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:CancelUploadArchive",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codecommit:ap-southeast-2:1111:",
                    Object {
                      "Fn::ImportValue": "AppDemoCosmos:ExportsOutputFnGetAttCdkRepoNameE40A1139",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "CdkPipelineDeploy",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodePipelineRoleDefaultPolicy",
        "Roles": Array [
          Object {
            "Ref": "CodePipelineRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
}
`;
